{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Resumo Este tutorial descreve a cria\u00e7\u00e3o de um projeto de IOT para medir a temperatura e umidade do ambiente em espa\u00e7os de educa\u00e7\u00e3o, buscando identificar as varia\u00e7\u00f5es que influenciam no conforto t\u00e9rmico dos estudantes, tratando os dados e comunicando as informa\u00e7\u00f5es de maneira acess\u00edvel. O objetivo \u00e9 tornar acess\u00edvel a cria\u00e7\u00e3o de projetos em IOT para alunos da educa\u00e7\u00e3o b\u00e1sica, partindo de problemas reais. Para isso, foi realizada a constru\u00e7\u00e3o de um hardware utilizando placa NodeMCU e sensor DHT22, para realizar a medi\u00e7\u00e3o da temperatura e umidade. Os dados foram colhidos pela plataforma ThingSpeak e comunicados por meio de anima\u00e7\u00e3o programada no Scratch. Foi tamb\u00e9m utilizada a extens\u00e3o Visualizador de Dados, que possibilita a comunica\u00e7\u00e3o entre o ThingSpeak e o Scratch. Os n\u00edveis de dificuldade de cada etapa s\u00e3o diferenciados, permitindo a cria\u00e7\u00e3o de projetos colaborativos com alunos de diferentes s\u00e9ries. Para execu\u00e7\u00e3o do projeto, a programa\u00e7\u00e3o do hardware necessita ser feita na IDE do Arduino, sendo este um processo poss\u00edvel para estudantes que estejam cursando os anos finais do ensino fundamental, ou o ensino m\u00e9dio. O tratamento dos dados utilizando a extens\u00e3o Visualizador de Dados e o Scratch permite a participa\u00e7\u00e3o de alunos a partir do 4\u00ba ano do ensino fundamental. Para definir as zonas de conforto t\u00e9rmico, estabelecemos o valor de 23\u00baC, considerando uma varia\u00e7\u00e3o entre 22\u00baC e 24\u00baC. Em rela\u00e7\u00e3o a umidade relativa do ar, seguimos as recomenda\u00e7\u00f5es da Organiza\u00e7\u00e3o Mundial de Sa\u00fade (OMS), que adotou uma escala que identifica os n\u00edveis de criticidade da umidade do ar da seguinte maneira: Entre 21 e 30% - Estado de Aten\u00e7\u00e3o Entre 12 e 20% - Estado de Alerta Abaixo de 12% - Estado de Emerg\u00eancia","title":"Home"},{"location":"#resumo","text":"Este tutorial descreve a cria\u00e7\u00e3o de um projeto de IOT para medir a temperatura e umidade do ambiente em espa\u00e7os de educa\u00e7\u00e3o, buscando identificar as varia\u00e7\u00f5es que influenciam no conforto t\u00e9rmico dos estudantes, tratando os dados e comunicando as informa\u00e7\u00f5es de maneira acess\u00edvel. O objetivo \u00e9 tornar acess\u00edvel a cria\u00e7\u00e3o de projetos em IOT para alunos da educa\u00e7\u00e3o b\u00e1sica, partindo de problemas reais. Para isso, foi realizada a constru\u00e7\u00e3o de um hardware utilizando placa NodeMCU e sensor DHT22, para realizar a medi\u00e7\u00e3o da temperatura e umidade. Os dados foram colhidos pela plataforma ThingSpeak e comunicados por meio de anima\u00e7\u00e3o programada no Scratch. Foi tamb\u00e9m utilizada a extens\u00e3o Visualizador de Dados, que possibilita a comunica\u00e7\u00e3o entre o ThingSpeak e o Scratch. Os n\u00edveis de dificuldade de cada etapa s\u00e3o diferenciados, permitindo a cria\u00e7\u00e3o de projetos colaborativos com alunos de diferentes s\u00e9ries. Para execu\u00e7\u00e3o do projeto, a programa\u00e7\u00e3o do hardware necessita ser feita na IDE do Arduino, sendo este um processo poss\u00edvel para estudantes que estejam cursando os anos finais do ensino fundamental, ou o ensino m\u00e9dio. O tratamento dos dados utilizando a extens\u00e3o Visualizador de Dados e o Scratch permite a participa\u00e7\u00e3o de alunos a partir do 4\u00ba ano do ensino fundamental. Para definir as zonas de conforto t\u00e9rmico, estabelecemos o valor de 23\u00baC, considerando uma varia\u00e7\u00e3o entre 22\u00baC e 24\u00baC. Em rela\u00e7\u00e3o a umidade relativa do ar, seguimos as recomenda\u00e7\u00f5es da Organiza\u00e7\u00e3o Mundial de Sa\u00fade (OMS), que adotou uma escala que identifica os n\u00edveis de criticidade da umidade do ar da seguinte maneira: Entre 21 e 30% - Estado de Aten\u00e7\u00e3o Entre 12 e 20% - Estado de Alerta Abaixo de 12% - Estado de Emerg\u00eancia","title":"Resumo"},{"location":"Coment%C3%A1rios%20finais/","text":"Coment\u00e1rios finais Este tutorial compartilhou o processo de montagem e programa\u00e7\u00e3o de um projeto de IOT com o intuito de medir a temperatura e umidade de espa\u00e7os educacionais para analisar o conforto t\u00e9rmico destes ambientes, considerando ser este um fator importante relacionado ao desempenho dos estudantes. Ap\u00f3s medir e tratar os dados, \u00e9 poss\u00edvel analisar as varia\u00e7\u00f5es de temperatura e umidade que interferem no conforto t\u00e9rmico e, desta forma, estudar e encaminhar solu\u00e7\u00f5es que possam amenizar o desconforto relatado pelos alunos. Esperamos inspirar professores e estudantes da educa\u00e7\u00e3o b\u00e1sica a desenvolverem projetos com os estudantes utilizando conceitos de IOT, de modo a verificar problemas do cotidiano escolar e encaminhar poss\u00edveis solu\u00e7\u00f5es por meio de atividades m\u00e3o na massa. Desta maneira, os alunos ter\u00e3o uma participa\u00e7\u00e3o mais ativa nas atividades e ter\u00e3o a oportunidade de vivenciar desafios reais e envolver-se na busca de solu\u00e7\u00f5es de problemas cotidianos.","title":"Coment\u00e1rios Finais"},{"location":"Coment%C3%A1rios%20finais/#comentarios-finais","text":"Este tutorial compartilhou o processo de montagem e programa\u00e7\u00e3o de um projeto de IOT com o intuito de medir a temperatura e umidade de espa\u00e7os educacionais para analisar o conforto t\u00e9rmico destes ambientes, considerando ser este um fator importante relacionado ao desempenho dos estudantes. Ap\u00f3s medir e tratar os dados, \u00e9 poss\u00edvel analisar as varia\u00e7\u00f5es de temperatura e umidade que interferem no conforto t\u00e9rmico e, desta forma, estudar e encaminhar solu\u00e7\u00f5es que possam amenizar o desconforto relatado pelos alunos. Esperamos inspirar professores e estudantes da educa\u00e7\u00e3o b\u00e1sica a desenvolverem projetos com os estudantes utilizando conceitos de IOT, de modo a verificar problemas do cotidiano escolar e encaminhar poss\u00edveis solu\u00e7\u00f5es por meio de atividades m\u00e3o na massa. Desta maneira, os alunos ter\u00e3o uma participa\u00e7\u00e3o mais ativa nas atividades e ter\u00e3o a oportunidade de vivenciar desafios reais e envolver-se na busca de solu\u00e7\u00f5es de problemas cotidianos.","title":"Coment\u00e1rios finais"},{"location":"Configura%C3%A7%C3%A3o%20do%20ThingSpeak%20para%20receber%20dados/","text":"Configura\u00e7\u00e3o do ThingSpeak para receber dados Para iniciar, \u00e9 necess\u00e1rio criar um cadastro em https://ThingSpeak.com/login , clicando em \u201cCreate on\u201d . Com o cadastro pronto, o usu\u00e1rio necessita criar um Canal (Channel). Para isso, acesse Channel e depois My Channel (Meu Canal), conforme ilustrado na Figura 21. Figura 21. Criando um canal no ThingSpeak Em seguida, escolha um Nome (Name), Descri\u00e7\u00e3o (Description) e os Campos (Field), como Umidade e Temperatura, por exemplo. Depois clique em Gravar Canal (Save Channel), conforme ilustra a Figura 22. Figura 22. Gravando o canal do ThingSpeak \u00c9 necess\u00e1rio anotar duas informa\u00e7\u00f5es que ser\u00e3o utilizadas no programa da placa (IDE do Arduino) e no programa do Scratch 3.0 que ir\u00e1 tratar os dados obtidos.Canal ID (Channel ID) A Chave de Escrita (Write API Key) (API Key) Verifique nas Figuras 23 e 24 os passos necess\u00e1rios. Figura 23. Local onde verificar os dados do Canal ID e da Chave de Escrita Figura 24. Verifica\u00e7\u00e3o da chave API para utilizar no Scratch Agora, \u00e9 necess\u00e1rio modificar o status de compartilhamento do projeto, deixando-o p\u00fablico, para que possa ser utilizado na programa\u00e7\u00e3o com o Scratch 3.0 (Figura 25). Figura 25. Status de compartilhamento do projeto","title":"ThingSpeak"},{"location":"Configura%C3%A7%C3%A3o%20do%20ThingSpeak%20para%20receber%20dados/#configuracao-do-thingspeak-para-receber-dados","text":"Para iniciar, \u00e9 necess\u00e1rio criar um cadastro em https://ThingSpeak.com/login , clicando em \u201cCreate on\u201d . Com o cadastro pronto, o usu\u00e1rio necessita criar um Canal (Channel). Para isso, acesse Channel e depois My Channel (Meu Canal), conforme ilustrado na Figura 21. Figura 21. Criando um canal no ThingSpeak Em seguida, escolha um Nome (Name), Descri\u00e7\u00e3o (Description) e os Campos (Field), como Umidade e Temperatura, por exemplo. Depois clique em Gravar Canal (Save Channel), conforme ilustra a Figura 22. Figura 22. Gravando o canal do ThingSpeak \u00c9 necess\u00e1rio anotar duas informa\u00e7\u00f5es que ser\u00e3o utilizadas no programa da placa (IDE do Arduino) e no programa do Scratch 3.0 que ir\u00e1 tratar os dados obtidos.Canal ID (Channel ID) A Chave de Escrita (Write API Key) (API Key) Verifique nas Figuras 23 e 24 os passos necess\u00e1rios. Figura 23. Local onde verificar os dados do Canal ID e da Chave de Escrita Figura 24. Verifica\u00e7\u00e3o da chave API para utilizar no Scratch Agora, \u00e9 necess\u00e1rio modificar o status de compartilhamento do projeto, deixando-o p\u00fablico, para que possa ser utilizado na programa\u00e7\u00e3o com o Scratch 3.0 (Figura 25). Figura 25. Status de compartilhamento do projeto","title":"Configura\u00e7\u00e3o do ThingSpeak para receber dados"},{"location":"Finaliza%C3%A7%C3%A3o%20do%20projeto/","text":"5. Finaliza\u00e7\u00e3o do projeto Para execu\u00e7\u00e3o do projeto montamos dois hardwares para medir os valores em pontos diferentes do ambiente Veja Figuras 45 e 46. Seria aconselh\u00e1vel montar mais de dois em locais grandes. Figura 45. Montagem do hardware Figura 46. Montagem do hardware Obtemos no ThigSpeak o seguinte gr\u00e1fico das medi\u00e7\u00f5es realizadas ao longo do projeto, conforme \u00e9 poss\u00edvel visualizar na Figura 47. Figura 47. Gr\u00e1fico das medi\u00e7\u00f5es realizadas entre 25 de outubro e 19 de novembro Para comunicar os dados utilizamos um mini monitor para deixar a anima\u00e7\u00e3o vis\u00edvel para todos que frequentam o ambiente (Figura 48). Figura 48. Anima\u00e7\u00e3o exibida em um mini monitor A Figura 49 mostra a temperatura e a umidade registrada no dia 22 de novembro de 2020 \u00e0s 21h. Figura 49. Temperatura e a umidade registrada no dia 22 de novembro de 2020 \u00e0s 21h.","title":"Finaliza\u00e7\u00e3o do Projeto"},{"location":"Finaliza%C3%A7%C3%A3o%20do%20projeto/#5-finalizacao-do-projeto","text":"Para execu\u00e7\u00e3o do projeto montamos dois hardwares para medir os valores em pontos diferentes do ambiente Veja Figuras 45 e 46. Seria aconselh\u00e1vel montar mais de dois em locais grandes. Figura 45. Montagem do hardware Figura 46. Montagem do hardware Obtemos no ThigSpeak o seguinte gr\u00e1fico das medi\u00e7\u00f5es realizadas ao longo do projeto, conforme \u00e9 poss\u00edvel visualizar na Figura 47. Figura 47. Gr\u00e1fico das medi\u00e7\u00f5es realizadas entre 25 de outubro e 19 de novembro Para comunicar os dados utilizamos um mini monitor para deixar a anima\u00e7\u00e3o vis\u00edvel para todos que frequentam o ambiente (Figura 48). Figura 48. Anima\u00e7\u00e3o exibida em um mini monitor A Figura 49 mostra a temperatura e a umidade registrada no dia 22 de novembro de 2020 \u00e0s 21h. Figura 49. Temperatura e a umidade registrada no dia 22 de novembro de 2020 \u00e0s 21h.","title":"5. Finaliza\u00e7\u00e3o do projeto"},{"location":"Montagem%20do%20hardware%20para%20medir%20temperatura%20e%20umidade/","text":"Montagem do hardware para medir temperatura e umidade Componente Descri\u00e7\u00e3o Quantidade Placa NodeMCU 1 M\u00f3dulo DHT22 1 Cabos de Conex\u00e3o (Jumper) 5 Protoboard 1 Optamos pela utiliza\u00e7\u00e3o da placa NodeMCU por ela fazer a comunica\u00e7\u00e3o com a internet e permitir enviar os dados ao ThingSpeak. Na falta deste recurso, \u00e9 poss\u00edvel substituir pela Arduino com uma Wifi Shield, por\u00e9m, sua montagem e programa\u00e7\u00e3o \u00e9 diferente. A placa NodeMCU possui os pinos para conex\u00e3o demonstrados na Figura 1, no entanto, para este projeto ser\u00e1 utilizado somente os pinos: 3.3V, GND e GPIO4 (D2). Figura 1. Pinos para conex\u00e3o da placa NodeMCU Fonte: link O m\u00f3dulo Wifi ESP8266 NodeMCU \u00e9 uma placa de desenvolvimento que combina o chip ESP8266, uma interface usb-serial e um regulador de tens\u00e3o 3.3V. Ela pode ser programada com Python, LUA e a IDE do Arduino com C++. Ser\u00e1 utilizada aqui a IDE do Arduino. O NodeMCU possui antena embutida e conector micro-usb para conex\u00e3o ao computador, al\u00e9m de 11 pinos de I/O e conversor anal\u00f3gico-digital. Veja na Figura 2 as especifica\u00e7\u00f5es da placa. Figura 2. Especifica\u00e7\u00f5es do m\u00f3dulo Wifi ESP8266 NodeMCU O sensor DHT22 - AM2302 permite medir temperaturas de - 40 a 80\u00ba Celsius, e umidade na faixa de 0 a 100 %. Sua faixa de precis\u00e3o para temperatura \u00e9 de 0,1 graus, e para umidade \u00e9 de 0,1%. Figura 3. Especifica\u00e7\u00f5es do m\u00f3dulo do sensor DHT22 Figura 4. Pinagem DHT22 Para montar o hardware ser\u00e1 preciso realizar as seguintes conex\u00f5es: Conecte a porta GND do NodeMCU na conex\u00e3o negativa da protoboard; Conecte a porta 3V3 do NodeMCU na conex\u00e3o positiva da protoboard; Conecte a porta digital do NodeMCU no pino central (out) do m\u00f3dulo DHT22; Conecte a porta positiva do m\u00f3dulo DHT22 na conex\u00e3o positiva da protoboard; Conecte a porta negativa do m\u00f3dulo DHT22 na conex\u00e3o negativa da protoboard. Figura 5. Ilustra\u00e7\u00e3o da montagem do hardware com as suas conex\u00f5es","title":"Montagem"},{"location":"Montagem%20do%20hardware%20para%20medir%20temperatura%20e%20umidade/#montagem-do-hardware-para-medir-temperatura-e-umidade","text":"Componente Descri\u00e7\u00e3o Quantidade Placa NodeMCU 1 M\u00f3dulo DHT22 1 Cabos de Conex\u00e3o (Jumper) 5 Protoboard 1 Optamos pela utiliza\u00e7\u00e3o da placa NodeMCU por ela fazer a comunica\u00e7\u00e3o com a internet e permitir enviar os dados ao ThingSpeak. Na falta deste recurso, \u00e9 poss\u00edvel substituir pela Arduino com uma Wifi Shield, por\u00e9m, sua montagem e programa\u00e7\u00e3o \u00e9 diferente. A placa NodeMCU possui os pinos para conex\u00e3o demonstrados na Figura 1, no entanto, para este projeto ser\u00e1 utilizado somente os pinos: 3.3V, GND e GPIO4 (D2). Figura 1. Pinos para conex\u00e3o da placa NodeMCU Fonte: link O m\u00f3dulo Wifi ESP8266 NodeMCU \u00e9 uma placa de desenvolvimento que combina o chip ESP8266, uma interface usb-serial e um regulador de tens\u00e3o 3.3V. Ela pode ser programada com Python, LUA e a IDE do Arduino com C++. Ser\u00e1 utilizada aqui a IDE do Arduino. O NodeMCU possui antena embutida e conector micro-usb para conex\u00e3o ao computador, al\u00e9m de 11 pinos de I/O e conversor anal\u00f3gico-digital. Veja na Figura 2 as especifica\u00e7\u00f5es da placa. Figura 2. Especifica\u00e7\u00f5es do m\u00f3dulo Wifi ESP8266 NodeMCU O sensor DHT22 - AM2302 permite medir temperaturas de - 40 a 80\u00ba Celsius, e umidade na faixa de 0 a 100 %. Sua faixa de precis\u00e3o para temperatura \u00e9 de 0,1 graus, e para umidade \u00e9 de 0,1%. Figura 3. Especifica\u00e7\u00f5es do m\u00f3dulo do sensor DHT22 Figura 4. Pinagem DHT22 Para montar o hardware ser\u00e1 preciso realizar as seguintes conex\u00f5es: Conecte a porta GND do NodeMCU na conex\u00e3o negativa da protoboard; Conecte a porta 3V3 do NodeMCU na conex\u00e3o positiva da protoboard; Conecte a porta digital do NodeMCU no pino central (out) do m\u00f3dulo DHT22; Conecte a porta positiva do m\u00f3dulo DHT22 na conex\u00e3o positiva da protoboard; Conecte a porta negativa do m\u00f3dulo DHT22 na conex\u00e3o negativa da protoboard. Figura 5. Ilustra\u00e7\u00e3o da montagem do hardware com as suas conex\u00f5es","title":"Montagem do hardware para medir temperatura e umidade"},{"location":"Programa%C3%A7%C3%A3o%20da%20placa%20NodeMCU/","text":"Programa\u00e7\u00e3o da placa NodeMCU Para realizar a programa\u00e7\u00e3o e execu\u00e7\u00e3o do projeto ser\u00e1 necess\u00e1rio obter os seguintes softwares: Arduino IDE, dispon\u00edvel em: https://www.arduino.cc/en/software HackEduca Scratch 3.0 Mod, dispon\u00edvel em: https://hackeduca.github.io/ Acesso ao ThingSpeak, em: https://ThingSpeak.com/login \u00c9 necess\u00e1rio criar um cadastro no site. Caso n\u00e3o tenha o cadastro, clique em \u201cCreate One\u201d. Drivers para comunica\u00e7\u00e3o entre o NodeMCU e o computador. Est\u00e1 dispon\u00edvel para as placas oficiais e similares nos seguintes links: Placa Oficial : https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers Placa Similar : https://github.com/nodemcu/nodemcu-devkit/tree/master/Drivers Agora veremos o passo-a-passo para instalar e programar a placa NodeMCU. No item 3.1 vamos verificar a instala\u00e7\u00e3o e no 3.2 como realizar a programa\u00e7\u00e3o. 2.1. Instala\u00e7\u00e3o do Driver do NodeMCU Existe duas op\u00e7\u00f5es de driver, para placas oficiais e similares. Neste projeto utilizamos a op\u00e7\u00e3o oficial que comp\u00f5e a placa do projeto. Fa\u00e7a o download no link: https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers Na Figura 6 \u00e9 poss\u00edvel verificar as op\u00e7\u00f5es de acordo com o sistema operacional. Figura 6. Op\u00e7\u00f5es de Driver do NodeMCU Verifique o passo a passo para fazer a instala\u00e7\u00e3o: Fa\u00e7a o download e escolha o arquivo compat\u00edvel (64bits ou 32bits) Abra o arquivo .exe e execute a instala\u00e7\u00e3o, conforme demonstra a Figura 7: Figura 7. Instala\u00e7\u00e3o do NodeMCU Ap\u00f3s basta clicar em concluir. Fa\u00e7a download da IDE do Arduino no seguinte endere\u00e7o: https://www.arduino.cc/en/software Escolha a vers\u00e3o Windows ZIP, a qual n\u00e3o precisa de instala\u00e7\u00e3o, somente \u00e9 necess\u00e1rio descompactar o arquivo, conforme demonstra a Figura 8. Figura 8. Descompactar a IDE do Arduino Escolha um local para salvar o arquivo, conforme a Figura 9 Figura 9. Salvar a IDE do Arduino Em seguida, basta descompactar o arquivo, conforme ilustra a Figura 10. Figura 10. Descompactar a pasta com a IDE do Arduino Execute o arquivo arduino.exe. Caso queira manter 100% dos desenvolvimentos e bibliotecas dentro dessa pasta, crie uma pasta chamada \u201cportable\u201d, para que nada seja instalado fora desse local. Veja exemplo na Figura 11: Figura 11. Executar a IDE do Arduino A instala\u00e7\u00e3o das bibliotecas ou library , as quais s\u00e3o conjuntos de fun\u00e7\u00e3o pr\u00e9-escritas que facilitam o trabalho quando se cria um novo programa, n\u00e3o sendo necess\u00e1rio reescrever todo o c\u00f3digo desde o in\u00edcio. Para isso, selecione a op\u00e7\u00e3o \u201cIncluir Biblioteca\u201d e, logo em seguida, \u201cGerenciar Bibliotecas\u201d (Figura 12). Figura 12. Instala\u00e7\u00e3o da biblioteca Na op\u00e7\u00e3o \u201cGerenciar Biblioteca\u201d Instale o \u201cDHT sensor library\u201d e o \u201cThingSpeak\u201d, conforme Figura 13: Figura 13. Instala\u00e7\u00e3o do \u201cDHT sensor library\u201d e do \u201cThingSpeak\u201d, Para instalar a placa NodeMCU ESP8266, de modo que ela fique dispon\u00edvel na IDE do Arduino, \u00e9 necess\u00e1rio primeiramente habilitar o uso da placa NodeMCU com ESP8266, para isso, \u00e9 preciso, indicar o endere\u00e7o do reposit\u00f3rio: https://arduino.esp8266.com/stable/package_esp8266com_index.json . Siga os passos de 1 a 4 indicado na Figura 10. Figura 14. Como habilitar o uso da placa NodeMCU com ESP8266 Escolha a placa, conforme est\u00e1 demonstrado nas Figuras 15, 16, 17 e 18: Figura 15. Selecionando a op\u00e7\u00e3o de gerenciamento de placas Figura 16. Selecionar e instalar o ESP8266 Figura 17. Selecionando NodeMCU Para selecionar a porta, verifique qual est\u00e1 dispon\u00edvel no seu dispositivo. Isso pode variar em cada dispositivo. No exemplo da Figura 18 a porta dispon\u00edvel selecionado foi a COM3, mas isso varia. Figura 18. Selecionando a porta dispon\u00edvel Feche a janela ap\u00f3s a instala\u00e7\u00e3o. 2.2. Programa\u00e7\u00e3o da placa NodeMCU Agora veremos como criar a conex\u00e3o do sensor DHT 22, conectado ao pino D2 do NodeMCU, para enviar dados ao ThingSpeak (Figura 19). \u00c9 poss\u00edvel fazer download do arquivo no link: https://drive.google.com/file/d/1BNsfWJ0jxjunhxm7o6kPmKUclMtLalzz/view?usp=sharing . Para utiliz\u00e1-lo basta fazer download. No Arduino clique em \u201cArquivo\u201d e em \u201cAbrir\u201d, ao aparecer uma mensagem relatando a necessidade de criar uma pasta, basta clicar em Ok. O programa j\u00e1 estar\u00e1 aberto na sua IDE do Arduino. Voc\u00ea pode pegar o c\u00f3digo aqui tamb\u00e9m... /** Este projeto faz parte da disciplina Fundamentos de Internet das Coisas - USP * Elaine Silva Rocha Sobreira * Prof. Dr. Antonio Deusany de Carvalho Jr. * * Possibilita a Conex\u00e3o do Sensor DHT22, ligado ao Pino D2 (GPIO4), enviando dados * para o ThingSpeak que s\u00e3o interpretados pelo Scratch 3.0, por meio da Extens\u00e3o DataViewer * (https://github.com/jaafreitas/scratch-dataviewer. * Utilizamos o ScratchMod (modifica\u00e7\u00e3o do Scratch), disponibilizado pelo HackEduca (https://www.hackeduca.com.br/). * * O ScratchMod pode ser acessado em https://hackeduca.github.io/ **/ // --------------------------- Declara\u00e7\u00e3o das Bibliotecas (library) --------------------------------------// #include \"DHT.h\" #include \"ThingSpeak.h\" #include <ESP8266WiFi.h> // -------------- Declara\u00e7\u00e3o dos dados de acesso (ssid, senhas, canal api -------------------------------// #define ssid \" \" // Coloque o nome da sua rede Wifi #define pass \" \" // Coloque a senha da sua rede Wifi #define myChannelNumber XXXXX // Coloque o ID do seu Canal no ThingSpeak #define myWriteAPIKey \" \" // Coloque a API do seu Canal no ThingSpeak // --------------------------------- Declara\u00e7\u00e3o das Bibliotecas -----------------------------------------// // Define o Sensor, o Pino e a inicializa\u00e7\u00e3o #define DHTTYPE DHT22 #define DHTPin D2 DHT dht(DHTPin, DHTTYPE); // -------------- Define as vari\u00e1veis para armazenamento de Umidade e Temperatura -----------------------// // Define as vari\u00e1veis para armazenamento de Umidade e Temperatura float h; // Umidade float t; // Temperatura // ------------------------- Cria uma inst\u00e2ncia para acesso a Web ---------------------------------------// WiFiClient client; //*************// void setup() { // ---------------------- Define o modo do Wif--> station mode ----------------------------------------// WiFi.mode(WIFI_STA); // ---------------------- Inicia processo para monitoramento serial -----------------------------------// Serial.begin(115200); // ----------------------------- Inicializa o sensor DHT22 --------------------------------------------// dht.begin(); // ----------------------------- Acessa o site ThingSpeak --------------------------------------------// ThingSpeak.begin(client); } //*************// void loop() { // ----------------------------- Define quantos campos ser\u00e3o enviados ----------------------------------// ThingSpeak.setField(1, h); ThingSpeak.setField(2, t); // -------------- Efetua a leitura de Temperatura e Umidade (guarda nas vari\u00e1veis t e h) --------------// t = dht.readTemperature(); h = dht.readHumidity(); // ----------------------------- Inicia o acesso a rede Wifi selecionada ------------------------------// if (WiFi.status() != WL_CONNECTED) { Serial.print(\"Tentando conectar a rede \"); while (WiFi.status() != WL_CONNECTED) { WiFi.begin(ssid, pass); Serial.print(\".\"); delay(5000); } Serial.println(\"\\nConectado!!!\"); Serial.println(ssid); Serial.println(WiFi.localIP()); } // ------------------------------ Envia dados ao ThingSpeak --------------------------------------------// int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); if (x == 200) { Serial.println(\"Dados foram enviados com Sucesso.\"); } else { Serial.println(\"H\u00e1 algum problema no acesso ao Thingspeak: Erro #: \" + String(x)); } // --------------------- Mostra dados na tela de monitoramento Serial ----------------------------------// Serial.print(\"Temperatura atual \u00e9 : \"); Serial.println(t); Serial.print(\"A umidade atual \u00e9 : \"); Serial.println(h); Serial.println(\"\"); // ------------- Aguarda 20 segundos antes de enviar um novo dado para o ThingSpeak ---------------------// delay(20000); } // --------------------------------------------- FIM ----------------------------------------------------// Carregando no Arduino, essa ser\u00e1 a imagem: Figura 19. Programa\u00e7\u00e3o da placa NodeMCU Na programa\u00e7\u00e3o temos coment\u00e1rios com as orienta\u00e7\u00f5es necess\u00e1rias para a declara\u00e7\u00e3o dos dados de acesso. No c\u00f3digo compartilhado, conforme a figura 20 ilustra, nas linhas 1 e 2 \u00e9 necess\u00e1rio incluir as informa\u00e7\u00f5es necess\u00e1rias para acessar a internet e, nas linhas 3 e 4 , as informa\u00e7\u00f5es para envio de dados para o ThingSpeak. Figura 20. Declara\u00e7\u00e3o das vari\u00e1veis para acesso \u00e0 internet e envio de dados Antes do carregamento do c\u00f3digo \u00e9 necess\u00e1rio informar nos espa\u00e7os indicados: * Nome da Rede Wifi * Senha da Rede Wifi * ID do Canal no ThingSpeak * Chave de Grava\u00e7\u00e3o do Canal do ThingSpeak Para obter as duas \u00faltimas informa\u00e7\u00f5es necess\u00e1rias, siga os passos apresentados na pr\u00f3xima sess\u00e3o:","title":"Programa\u00e7\u00e3o"},{"location":"Programa%C3%A7%C3%A3o%20da%20placa%20NodeMCU/#programacao-da-placa-nodemcu","text":"Para realizar a programa\u00e7\u00e3o e execu\u00e7\u00e3o do projeto ser\u00e1 necess\u00e1rio obter os seguintes softwares: Arduino IDE, dispon\u00edvel em: https://www.arduino.cc/en/software HackEduca Scratch 3.0 Mod, dispon\u00edvel em: https://hackeduca.github.io/ Acesso ao ThingSpeak, em: https://ThingSpeak.com/login \u00c9 necess\u00e1rio criar um cadastro no site. Caso n\u00e3o tenha o cadastro, clique em \u201cCreate One\u201d. Drivers para comunica\u00e7\u00e3o entre o NodeMCU e o computador. Est\u00e1 dispon\u00edvel para as placas oficiais e similares nos seguintes links: Placa Oficial : https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers Placa Similar : https://github.com/nodemcu/nodemcu-devkit/tree/master/Drivers Agora veremos o passo-a-passo para instalar e programar a placa NodeMCU. No item 3.1 vamos verificar a instala\u00e7\u00e3o e no 3.2 como realizar a programa\u00e7\u00e3o.","title":"Programa\u00e7\u00e3o da placa NodeMCU"},{"location":"Programa%C3%A7%C3%A3o%20da%20placa%20NodeMCU/#21-instalacao-do-driver-do-nodemcu","text":"Existe duas op\u00e7\u00f5es de driver, para placas oficiais e similares. Neste projeto utilizamos a op\u00e7\u00e3o oficial que comp\u00f5e a placa do projeto. Fa\u00e7a o download no link: https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers Na Figura 6 \u00e9 poss\u00edvel verificar as op\u00e7\u00f5es de acordo com o sistema operacional. Figura 6. Op\u00e7\u00f5es de Driver do NodeMCU Verifique o passo a passo para fazer a instala\u00e7\u00e3o: Fa\u00e7a o download e escolha o arquivo compat\u00edvel (64bits ou 32bits) Abra o arquivo .exe e execute a instala\u00e7\u00e3o, conforme demonstra a Figura 7: Figura 7. Instala\u00e7\u00e3o do NodeMCU Ap\u00f3s basta clicar em concluir. Fa\u00e7a download da IDE do Arduino no seguinte endere\u00e7o: https://www.arduino.cc/en/software Escolha a vers\u00e3o Windows ZIP, a qual n\u00e3o precisa de instala\u00e7\u00e3o, somente \u00e9 necess\u00e1rio descompactar o arquivo, conforme demonstra a Figura 8. Figura 8. Descompactar a IDE do Arduino Escolha um local para salvar o arquivo, conforme a Figura 9 Figura 9. Salvar a IDE do Arduino Em seguida, basta descompactar o arquivo, conforme ilustra a Figura 10. Figura 10. Descompactar a pasta com a IDE do Arduino Execute o arquivo arduino.exe. Caso queira manter 100% dos desenvolvimentos e bibliotecas dentro dessa pasta, crie uma pasta chamada \u201cportable\u201d, para que nada seja instalado fora desse local. Veja exemplo na Figura 11: Figura 11. Executar a IDE do Arduino A instala\u00e7\u00e3o das bibliotecas ou library , as quais s\u00e3o conjuntos de fun\u00e7\u00e3o pr\u00e9-escritas que facilitam o trabalho quando se cria um novo programa, n\u00e3o sendo necess\u00e1rio reescrever todo o c\u00f3digo desde o in\u00edcio. Para isso, selecione a op\u00e7\u00e3o \u201cIncluir Biblioteca\u201d e, logo em seguida, \u201cGerenciar Bibliotecas\u201d (Figura 12). Figura 12. Instala\u00e7\u00e3o da biblioteca Na op\u00e7\u00e3o \u201cGerenciar Biblioteca\u201d Instale o \u201cDHT sensor library\u201d e o \u201cThingSpeak\u201d, conforme Figura 13: Figura 13. Instala\u00e7\u00e3o do \u201cDHT sensor library\u201d e do \u201cThingSpeak\u201d, Para instalar a placa NodeMCU ESP8266, de modo que ela fique dispon\u00edvel na IDE do Arduino, \u00e9 necess\u00e1rio primeiramente habilitar o uso da placa NodeMCU com ESP8266, para isso, \u00e9 preciso, indicar o endere\u00e7o do reposit\u00f3rio: https://arduino.esp8266.com/stable/package_esp8266com_index.json . Siga os passos de 1 a 4 indicado na Figura 10. Figura 14. Como habilitar o uso da placa NodeMCU com ESP8266 Escolha a placa, conforme est\u00e1 demonstrado nas Figuras 15, 16, 17 e 18: Figura 15. Selecionando a op\u00e7\u00e3o de gerenciamento de placas Figura 16. Selecionar e instalar o ESP8266 Figura 17. Selecionando NodeMCU Para selecionar a porta, verifique qual est\u00e1 dispon\u00edvel no seu dispositivo. Isso pode variar em cada dispositivo. No exemplo da Figura 18 a porta dispon\u00edvel selecionado foi a COM3, mas isso varia. Figura 18. Selecionando a porta dispon\u00edvel Feche a janela ap\u00f3s a instala\u00e7\u00e3o.","title":"2.1. Instala\u00e7\u00e3o do Driver do NodeMCU"},{"location":"Programa%C3%A7%C3%A3o%20da%20placa%20NodeMCU/#22-programacao-da-placa-nodemcu","text":"Agora veremos como criar a conex\u00e3o do sensor DHT 22, conectado ao pino D2 do NodeMCU, para enviar dados ao ThingSpeak (Figura 19). \u00c9 poss\u00edvel fazer download do arquivo no link: https://drive.google.com/file/d/1BNsfWJ0jxjunhxm7o6kPmKUclMtLalzz/view?usp=sharing . Para utiliz\u00e1-lo basta fazer download. No Arduino clique em \u201cArquivo\u201d e em \u201cAbrir\u201d, ao aparecer uma mensagem relatando a necessidade de criar uma pasta, basta clicar em Ok. O programa j\u00e1 estar\u00e1 aberto na sua IDE do Arduino. Voc\u00ea pode pegar o c\u00f3digo aqui tamb\u00e9m... /** Este projeto faz parte da disciplina Fundamentos de Internet das Coisas - USP * Elaine Silva Rocha Sobreira * Prof. Dr. Antonio Deusany de Carvalho Jr. * * Possibilita a Conex\u00e3o do Sensor DHT22, ligado ao Pino D2 (GPIO4), enviando dados * para o ThingSpeak que s\u00e3o interpretados pelo Scratch 3.0, por meio da Extens\u00e3o DataViewer * (https://github.com/jaafreitas/scratch-dataviewer. * Utilizamos o ScratchMod (modifica\u00e7\u00e3o do Scratch), disponibilizado pelo HackEduca (https://www.hackeduca.com.br/). * * O ScratchMod pode ser acessado em https://hackeduca.github.io/ **/ // --------------------------- Declara\u00e7\u00e3o das Bibliotecas (library) --------------------------------------// #include \"DHT.h\" #include \"ThingSpeak.h\" #include <ESP8266WiFi.h> // -------------- Declara\u00e7\u00e3o dos dados de acesso (ssid, senhas, canal api -------------------------------// #define ssid \" \" // Coloque o nome da sua rede Wifi #define pass \" \" // Coloque a senha da sua rede Wifi #define myChannelNumber XXXXX // Coloque o ID do seu Canal no ThingSpeak #define myWriteAPIKey \" \" // Coloque a API do seu Canal no ThingSpeak // --------------------------------- Declara\u00e7\u00e3o das Bibliotecas -----------------------------------------// // Define o Sensor, o Pino e a inicializa\u00e7\u00e3o #define DHTTYPE DHT22 #define DHTPin D2 DHT dht(DHTPin, DHTTYPE); // -------------- Define as vari\u00e1veis para armazenamento de Umidade e Temperatura -----------------------// // Define as vari\u00e1veis para armazenamento de Umidade e Temperatura float h; // Umidade float t; // Temperatura // ------------------------- Cria uma inst\u00e2ncia para acesso a Web ---------------------------------------// WiFiClient client; //*************// void setup() { // ---------------------- Define o modo do Wif--> station mode ----------------------------------------// WiFi.mode(WIFI_STA); // ---------------------- Inicia processo para monitoramento serial -----------------------------------// Serial.begin(115200); // ----------------------------- Inicializa o sensor DHT22 --------------------------------------------// dht.begin(); // ----------------------------- Acessa o site ThingSpeak --------------------------------------------// ThingSpeak.begin(client); } //*************// void loop() { // ----------------------------- Define quantos campos ser\u00e3o enviados ----------------------------------// ThingSpeak.setField(1, h); ThingSpeak.setField(2, t); // -------------- Efetua a leitura de Temperatura e Umidade (guarda nas vari\u00e1veis t e h) --------------// t = dht.readTemperature(); h = dht.readHumidity(); // ----------------------------- Inicia o acesso a rede Wifi selecionada ------------------------------// if (WiFi.status() != WL_CONNECTED) { Serial.print(\"Tentando conectar a rede \"); while (WiFi.status() != WL_CONNECTED) { WiFi.begin(ssid, pass); Serial.print(\".\"); delay(5000); } Serial.println(\"\\nConectado!!!\"); Serial.println(ssid); Serial.println(WiFi.localIP()); } // ------------------------------ Envia dados ao ThingSpeak --------------------------------------------// int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey); if (x == 200) { Serial.println(\"Dados foram enviados com Sucesso.\"); } else { Serial.println(\"H\u00e1 algum problema no acesso ao Thingspeak: Erro #: \" + String(x)); } // --------------------- Mostra dados na tela de monitoramento Serial ----------------------------------// Serial.print(\"Temperatura atual \u00e9 : \"); Serial.println(t); Serial.print(\"A umidade atual \u00e9 : \"); Serial.println(h); Serial.println(\"\"); // ------------- Aguarda 20 segundos antes de enviar um novo dado para o ThingSpeak ---------------------// delay(20000); } // --------------------------------------------- FIM ----------------------------------------------------// Carregando no Arduino, essa ser\u00e1 a imagem: Figura 19. Programa\u00e7\u00e3o da placa NodeMCU Na programa\u00e7\u00e3o temos coment\u00e1rios com as orienta\u00e7\u00f5es necess\u00e1rias para a declara\u00e7\u00e3o dos dados de acesso. No c\u00f3digo compartilhado, conforme a figura 20 ilustra, nas linhas 1 e 2 \u00e9 necess\u00e1rio incluir as informa\u00e7\u00f5es necess\u00e1rias para acessar a internet e, nas linhas 3 e 4 , as informa\u00e7\u00f5es para envio de dados para o ThingSpeak. Figura 20. Declara\u00e7\u00e3o das vari\u00e1veis para acesso \u00e0 internet e envio de dados Antes do carregamento do c\u00f3digo \u00e9 necess\u00e1rio informar nos espa\u00e7os indicados: * Nome da Rede Wifi * Senha da Rede Wifi * ID do Canal no ThingSpeak * Chave de Grava\u00e7\u00e3o do Canal do ThingSpeak Para obter as duas \u00faltimas informa\u00e7\u00f5es necess\u00e1rias, siga os passos apresentados na pr\u00f3xima sess\u00e3o:","title":"2.2. Programa\u00e7\u00e3o da placa NodeMCU"},{"location":"Refer%C3%AAncias%20consultadas/","text":"Refer\u00eancias consultadas Batiz, E. C., Goedert, J., Morsch, J. J., Kasmirski-Jr, P., Venske, R. (2009). Avalia\u00e7\u00e3o do conforto t\u00e9rmico no aprendizado: estudo de caso sobre influ\u00eancia na aten\u00e7\u00e3o e mem\u00f3ria. Produ\u00e7\u00e3o, v. 19, n. 3, p. 477-488. Dispon\u00edvel em https://www.scielo.br/pdf/prod/v19n3/06.pdf Acesso em 20 nov. 2020. Centro de Gerenciamento de Emerg\u00eancias. Umidade relativa do ar. Dispon\u00edvel em < https://www.cgesp.org/v3/umidade-relativa-do-ar.jsp> Acesso em 20 nov. 2020. Kowaltoski, D. C. C. K. (2011) Arquitetura escolar, o projeto do ambiente de ensino. S\u00e3o Paulo: Ed. Oficina de textos. Lucas, R.E.C., Silva, L.B.da (2017). Conforto ambiental em sala de aula: an\u00e1lise da percep\u00e7\u00e3o t\u00e9rmica dos estudantes de duas regi\u00f5es e estima\u00e7\u00e3o de zonas de conforto. Revista Produ\u00e7\u00e3o Online. Florian\u00f3polis, SC, v.17, n. 3, p. 804-827. Oliveira, S de; Costa, C. da S (2014). An\u00e1lise do conforto t\u00e9rmico em uma sala de aula. Conex\u00e3o ci.: r. cient. UNIFOR-MG, Formiga, v. 9, n. 1, p. 74-84. Sarmento, T. F. C. S.; Gomes, A. S. (2019). Design de ambiente escolar para aprendizagem criativa. Pipa Comunica\u00e7\u00e3o.","title":"Refer\u00eancias"},{"location":"Refer%C3%AAncias%20consultadas/#referencias-consultadas","text":"Batiz, E. C., Goedert, J., Morsch, J. J., Kasmirski-Jr, P., Venske, R. (2009). Avalia\u00e7\u00e3o do conforto t\u00e9rmico no aprendizado: estudo de caso sobre influ\u00eancia na aten\u00e7\u00e3o e mem\u00f3ria. Produ\u00e7\u00e3o, v. 19, n. 3, p. 477-488. Dispon\u00edvel em https://www.scielo.br/pdf/prod/v19n3/06.pdf Acesso em 20 nov. 2020. Centro de Gerenciamento de Emerg\u00eancias. Umidade relativa do ar. Dispon\u00edvel em < https://www.cgesp.org/v3/umidade-relativa-do-ar.jsp> Acesso em 20 nov. 2020. Kowaltoski, D. C. C. K. (2011) Arquitetura escolar, o projeto do ambiente de ensino. S\u00e3o Paulo: Ed. Oficina de textos. Lucas, R.E.C., Silva, L.B.da (2017). Conforto ambiental em sala de aula: an\u00e1lise da percep\u00e7\u00e3o t\u00e9rmica dos estudantes de duas regi\u00f5es e estima\u00e7\u00e3o de zonas de conforto. Revista Produ\u00e7\u00e3o Online. Florian\u00f3polis, SC, v.17, n. 3, p. 804-827. Oliveira, S de; Costa, C. da S (2014). An\u00e1lise do conforto t\u00e9rmico em uma sala de aula. Conex\u00e3o ci.: r. cient. UNIFOR-MG, Formiga, v. 9, n. 1, p. 74-84. Sarmento, T. F. C. S.; Gomes, A. S. (2019). Design de ambiente escolar para aprendizagem criativa. Pipa Comunica\u00e7\u00e3o.","title":"Refer\u00eancias consultadas"},{"location":"Tratamento%20dos%20dados%20no%20Scratch%20usando%20a%20extens%C3%A3o%20Visualizador%20de%20Dados/","text":"Tratamento dos dados no Scratch usando a extens\u00e3o Visualizador de Dados O Scratch \u00e9 uma linguagem de programa\u00e7\u00e3o por blocos a qual permite que crian\u00e7as \u00e0 partir de oito anos de idade aprenda a programar e criar anima\u00e7\u00f5es, hist\u00f3rias interativas, jogos, simula\u00e7\u00f5es dentre outros. Ele possui uma comunidade online onde os projetos s\u00e3o compartilhados de forma que todos os visitantes e/ou usu\u00e1rios possam verificar os c\u00f3digos utilizados para criar qualquer um dos projetos compartilhados. Algumas extens\u00f5es oficiais s\u00e3o disponibilizadas na comunidade online. Diversos outros desenvolvedores ao redor do mundo criam extens\u00f5es diversas e disponibilizam para a comunidade em locais diversos. A extens\u00e3o Visualizador de Dados, criada pela C\u00e1ssia de Oliveira Fernandez e Jo\u00e3o Adriano Freitas (POLI-USP), foi disponibilizada no GitHub. Esta extens\u00e3o permite que o Scratch receba dados do ThingSpeak, favorecendo assim, o tratamento dos dados por alunos que possuem poucos conhecimentos de programa\u00e7\u00e3o. Por ser uma extens\u00e3o n\u00e3o oficial, ela \u00e9 utilizada com vers\u00f5es modificadas do Scratch. Aqui, utilizamos a vers\u00e3o disponibilizada pelo HackEduca em https://hackeduca.github.io/ A extens\u00e3o Visualizador de Dados adiciona no Scratch os blocos que permitem a comunica\u00e7\u00e3o com o ThingSpeak. Para utiliz\u00e1-la, \u00e9 preciso acessar a vers\u00e3o modificada (https://hackeduca.github.io/) a qual abrir\u00e1 uma tela de programa\u00e7\u00e3o similar ao Scratch oficial. Em seguida, \u00e9 preciso habilitar a extens\u00e3o \u201cVisualizador de Dados\u201d, clicando no \u00edcone localizado no canto inferior esquerdo da tela conforme demonstrado na Figura 26. Figura 26. Tela de programa\u00e7\u00e3o do Scratch dispon\u00edvel em https://hackeduca.github.io e localiza\u00e7\u00e3o do \u00edcone para selecionar a extens\u00e3o de Visualizador de Dados Em seguida, para habilitar a extens\u00e3o \u201cVisualizador de Dados\u201d escolha a extens\u00e3o, conforme demonstrado na Figura 27. Figura 27. Selecionando a extens\u00e3o Visualizador de Dados A programa\u00e7\u00e3o no Scratch consiste em arrastar blocos e encaix\u00e1-los de acordo com o projeto que deseja criar. Para compreender as programa\u00e7\u00f5es b\u00e1sicas do Scratch basta acessar o site oficial: https://scratch.mit.edu/ e explorar os tutoriais disponibilizados em: https://scratch.mit.edu/projects/editor/?tutorial=all. Para programar a vers\u00e3o do Scratch com a extens\u00e3o de Visualizador de Dados, \u00e9 necess\u00e1rio informar o c\u00f3digo do Canal no bloco de defini\u00e7\u00e3o de dados para ler o ThingSpeak, conforme indicado nas Figuras 28 e 29. Verificamos anteriormente como obter esse c\u00f3digo (ID do Canal) na Figura 23. Figura 28. Como unir os blocos para inserir a chave da API Figura 29. Local para inserir a chave da API do ThingSpeak Em rela\u00e7\u00e3o ao n\u00famero do campo, no ThingSpeak v\u00e1 em Channel Settings e verifique qual campo deseja obter os dados. No caso, o campo 1 (Field 1) refere-se a umidade e 2 (Field 2) refere-se aos dados relacionados a temperatura (Figura 30). Figura 30. Verificando a numera\u00e7\u00e3o dos campos no ThingSpeak Para programar a leitura da temperatura e da umidade utilizamos os comandos demonstrados na Figura 31. Figura 31. Programa\u00e7\u00e3o no Scratch para ler os dados no Visualizador de Dados O bloco laranja claro \u201cmude para\u201d, com o nome temp ou umid (referentes a temperatura e umidade respectivamente), \u00e9 uma vari\u00e1vel. Para criar a vari\u00e1vel verifique a Figura 32, ap\u00f3s criar a vari\u00e1vel, basta nome\u00e1-la. Figura 32. Criando uma vari\u00e1vel no Scratch J\u00e1 os blocos laranja escuro (adicione, item, apague todos) s\u00e3o obtidos ao criar uma lista. Para isso, basta clicar em vari\u00e1veis, escolher a op\u00e7\u00e3o \u201cCriar uma lista\u201d e nomear a lista. Aqui nomeamos como \u201cThingSpeak_temp\u201d e \u201cThingSpeak_umid\u201d. Veja na Figura 33 os \u00faltimos valores identificados na IDE do Arduino e na Figura 34 os mesmos valores identificados na extens\u00e3o de Visualizador de Dados. Figura 33. Valores identificados na IDE do Arduino Figura 34. Valores identificados na extens\u00e3o de Visualizador de Dados A comunica\u00e7\u00e3o dos dados foi realizada por meio de anima\u00e7\u00e3o criada por uma crian\u00e7a de 12 anos, tendo como par\u00e2metros a temperatura de 23 graus como sendo o conforto t\u00e9rmico (KOWALTOSKI, 2011) aceitando uma varia\u00e7\u00e3o entre 22 e 23 graus, temperaturas tamb\u00e9m considerada aceit\u00e1vel em estudos como de Lucas e Silva (2017). Para os valores de umidade utilizamos as informa\u00e7\u00f5es fornecidas pelo \u201cCentro de Gerenciamento de Emerg\u00eancias \u2013 CGE - SP\u201d que considera adequada entre 50% e 60%, estado de aten\u00e7\u00e3o entre 21 e 30%, estado de alerta entre 12 e 20% e estado de emerg\u00eancia abaixo de 12% Ao identificar os valores de temperatura e umidade o Scratch muda o plano de fundo da tela e aparece com trajes personalizados oferecendo as seguintes dicas e/ou alertas. A Figura 35 mostra o exemplo de tela com temperatura de 0\u00ba e umidade relativa do ar em 59% Figura 35. Temperatura de 0\u00ba e umidade relativa do ar em 59% A Figura 36 mostra o exemplo de tela com temperatura de 13\u00ba e umidade relativa do ar em 70% Figura 36. Temperatura de 13\u00ba e umidade relativa do ar em 70% A Figura 37 mostra o exemplo de tela com temperatura de 16\u00ba e umidade relativa do ar em 45% Figura 37. Temperatura de 16\u00ba e umidade relativa do ar em 45% A Figura 38 mostra o exemplo de tela com temperatura de 20\u00ba e umidade relativa do ar em 30% Figura 38. Temperatura de 20\u00ba e umidade relativa do ar em 30% A Figura 39 mostra o exemplo de tela com temperatura de 23\u00ba e umidade relativa do ar em 60% Figura 39. Temperatura de 23\u00ba e umidade relativa do ar em 60% A Figura 40 mostra o exemplo de tela com temperatura de 26\u00ba e umidade relativa do ar em 20% Figura 40. Temperatura de 26\u00ba e umidade relativa do ar em 20% A Figura 41 mostra o exemplo de tela com temperatura de 29\u00ba e umidade relativa do ar em 12% Figura 41. Temperatura de 29\u00ba e umidade relativa do ar em 12% A Figura 42 mostra o exemplo de tela com temperatura de 34\u00ba e umidade relativa do ar em 12% Figura 42. Temperatura de 34\u00ba e umidade relativa do ar em 12% A programa\u00e7\u00e3o realizada no Scratch para comunicar o valor da temperatura do ambiente, pode ser observada na Figura 43 a seguir: Figura 43. Programa\u00e7\u00e3o para comunicar a temperatura do ambiente A programa\u00e7\u00e3o para comunicar a umidade registrada no ambiente, est\u00e1 dispon\u00edvel na Figura 44. Figura 44. Programa\u00e7\u00e3o para comunicar a umidade do ambiente O programa com o c\u00f3digo completo, incluindo os blocos para leitura dos dados no Thingspeak, a programa\u00e7\u00e3o da temperatura e da umidade est\u00e1 dispon\u00edvel no link: Aqui","title":"Scratch 3.0"},{"location":"Tratamento%20dos%20dados%20no%20Scratch%20usando%20a%20extens%C3%A3o%20Visualizador%20de%20Dados/#tratamento-dos-dados-no-scratch-usando-a-extensao-visualizador-de-dados","text":"O Scratch \u00e9 uma linguagem de programa\u00e7\u00e3o por blocos a qual permite que crian\u00e7as \u00e0 partir de oito anos de idade aprenda a programar e criar anima\u00e7\u00f5es, hist\u00f3rias interativas, jogos, simula\u00e7\u00f5es dentre outros. Ele possui uma comunidade online onde os projetos s\u00e3o compartilhados de forma que todos os visitantes e/ou usu\u00e1rios possam verificar os c\u00f3digos utilizados para criar qualquer um dos projetos compartilhados. Algumas extens\u00f5es oficiais s\u00e3o disponibilizadas na comunidade online. Diversos outros desenvolvedores ao redor do mundo criam extens\u00f5es diversas e disponibilizam para a comunidade em locais diversos. A extens\u00e3o Visualizador de Dados, criada pela C\u00e1ssia de Oliveira Fernandez e Jo\u00e3o Adriano Freitas (POLI-USP), foi disponibilizada no GitHub. Esta extens\u00e3o permite que o Scratch receba dados do ThingSpeak, favorecendo assim, o tratamento dos dados por alunos que possuem poucos conhecimentos de programa\u00e7\u00e3o. Por ser uma extens\u00e3o n\u00e3o oficial, ela \u00e9 utilizada com vers\u00f5es modificadas do Scratch. Aqui, utilizamos a vers\u00e3o disponibilizada pelo HackEduca em https://hackeduca.github.io/ A extens\u00e3o Visualizador de Dados adiciona no Scratch os blocos que permitem a comunica\u00e7\u00e3o com o ThingSpeak. Para utiliz\u00e1-la, \u00e9 preciso acessar a vers\u00e3o modificada (https://hackeduca.github.io/) a qual abrir\u00e1 uma tela de programa\u00e7\u00e3o similar ao Scratch oficial. Em seguida, \u00e9 preciso habilitar a extens\u00e3o \u201cVisualizador de Dados\u201d, clicando no \u00edcone localizado no canto inferior esquerdo da tela conforme demonstrado na Figura 26. Figura 26. Tela de programa\u00e7\u00e3o do Scratch dispon\u00edvel em https://hackeduca.github.io e localiza\u00e7\u00e3o do \u00edcone para selecionar a extens\u00e3o de Visualizador de Dados Em seguida, para habilitar a extens\u00e3o \u201cVisualizador de Dados\u201d escolha a extens\u00e3o, conforme demonstrado na Figura 27. Figura 27. Selecionando a extens\u00e3o Visualizador de Dados A programa\u00e7\u00e3o no Scratch consiste em arrastar blocos e encaix\u00e1-los de acordo com o projeto que deseja criar. Para compreender as programa\u00e7\u00f5es b\u00e1sicas do Scratch basta acessar o site oficial: https://scratch.mit.edu/ e explorar os tutoriais disponibilizados em: https://scratch.mit.edu/projects/editor/?tutorial=all. Para programar a vers\u00e3o do Scratch com a extens\u00e3o de Visualizador de Dados, \u00e9 necess\u00e1rio informar o c\u00f3digo do Canal no bloco de defini\u00e7\u00e3o de dados para ler o ThingSpeak, conforme indicado nas Figuras 28 e 29. Verificamos anteriormente como obter esse c\u00f3digo (ID do Canal) na Figura 23. Figura 28. Como unir os blocos para inserir a chave da API Figura 29. Local para inserir a chave da API do ThingSpeak Em rela\u00e7\u00e3o ao n\u00famero do campo, no ThingSpeak v\u00e1 em Channel Settings e verifique qual campo deseja obter os dados. No caso, o campo 1 (Field 1) refere-se a umidade e 2 (Field 2) refere-se aos dados relacionados a temperatura (Figura 30). Figura 30. Verificando a numera\u00e7\u00e3o dos campos no ThingSpeak Para programar a leitura da temperatura e da umidade utilizamos os comandos demonstrados na Figura 31. Figura 31. Programa\u00e7\u00e3o no Scratch para ler os dados no Visualizador de Dados O bloco laranja claro \u201cmude para\u201d, com o nome temp ou umid (referentes a temperatura e umidade respectivamente), \u00e9 uma vari\u00e1vel. Para criar a vari\u00e1vel verifique a Figura 32, ap\u00f3s criar a vari\u00e1vel, basta nome\u00e1-la. Figura 32. Criando uma vari\u00e1vel no Scratch J\u00e1 os blocos laranja escuro (adicione, item, apague todos) s\u00e3o obtidos ao criar uma lista. Para isso, basta clicar em vari\u00e1veis, escolher a op\u00e7\u00e3o \u201cCriar uma lista\u201d e nomear a lista. Aqui nomeamos como \u201cThingSpeak_temp\u201d e \u201cThingSpeak_umid\u201d. Veja na Figura 33 os \u00faltimos valores identificados na IDE do Arduino e na Figura 34 os mesmos valores identificados na extens\u00e3o de Visualizador de Dados. Figura 33. Valores identificados na IDE do Arduino Figura 34. Valores identificados na extens\u00e3o de Visualizador de Dados A comunica\u00e7\u00e3o dos dados foi realizada por meio de anima\u00e7\u00e3o criada por uma crian\u00e7a de 12 anos, tendo como par\u00e2metros a temperatura de 23 graus como sendo o conforto t\u00e9rmico (KOWALTOSKI, 2011) aceitando uma varia\u00e7\u00e3o entre 22 e 23 graus, temperaturas tamb\u00e9m considerada aceit\u00e1vel em estudos como de Lucas e Silva (2017). Para os valores de umidade utilizamos as informa\u00e7\u00f5es fornecidas pelo \u201cCentro de Gerenciamento de Emerg\u00eancias \u2013 CGE - SP\u201d que considera adequada entre 50% e 60%, estado de aten\u00e7\u00e3o entre 21 e 30%, estado de alerta entre 12 e 20% e estado de emerg\u00eancia abaixo de 12% Ao identificar os valores de temperatura e umidade o Scratch muda o plano de fundo da tela e aparece com trajes personalizados oferecendo as seguintes dicas e/ou alertas. A Figura 35 mostra o exemplo de tela com temperatura de 0\u00ba e umidade relativa do ar em 59% Figura 35. Temperatura de 0\u00ba e umidade relativa do ar em 59% A Figura 36 mostra o exemplo de tela com temperatura de 13\u00ba e umidade relativa do ar em 70% Figura 36. Temperatura de 13\u00ba e umidade relativa do ar em 70% A Figura 37 mostra o exemplo de tela com temperatura de 16\u00ba e umidade relativa do ar em 45% Figura 37. Temperatura de 16\u00ba e umidade relativa do ar em 45% A Figura 38 mostra o exemplo de tela com temperatura de 20\u00ba e umidade relativa do ar em 30% Figura 38. Temperatura de 20\u00ba e umidade relativa do ar em 30% A Figura 39 mostra o exemplo de tela com temperatura de 23\u00ba e umidade relativa do ar em 60% Figura 39. Temperatura de 23\u00ba e umidade relativa do ar em 60% A Figura 40 mostra o exemplo de tela com temperatura de 26\u00ba e umidade relativa do ar em 20% Figura 40. Temperatura de 26\u00ba e umidade relativa do ar em 20% A Figura 41 mostra o exemplo de tela com temperatura de 29\u00ba e umidade relativa do ar em 12% Figura 41. Temperatura de 29\u00ba e umidade relativa do ar em 12% A Figura 42 mostra o exemplo de tela com temperatura de 34\u00ba e umidade relativa do ar em 12% Figura 42. Temperatura de 34\u00ba e umidade relativa do ar em 12% A programa\u00e7\u00e3o realizada no Scratch para comunicar o valor da temperatura do ambiente, pode ser observada na Figura 43 a seguir: Figura 43. Programa\u00e7\u00e3o para comunicar a temperatura do ambiente A programa\u00e7\u00e3o para comunicar a umidade registrada no ambiente, est\u00e1 dispon\u00edvel na Figura 44. Figura 44. Programa\u00e7\u00e3o para comunicar a umidade do ambiente O programa com o c\u00f3digo completo, incluindo os blocos para leitura dos dados no Thingspeak, a programa\u00e7\u00e3o da temperatura e da umidade est\u00e1 dispon\u00edvel no link: Aqui","title":"Tratamento dos dados no Scratch usando a extens\u00e3o Visualizador de Dados"},{"location":"sobre/","text":"Este projeto foi desenvolvido como atividade final da disciplina Fundamentos da Internet das Coisas, oferecida no IME-USP no segundo semestre de 2020, pelo professor Antonio Deusany de Carvalho Junior. Participei da disciplina com o intuito de aprender mais sobre IOT para poder desenvolver projetos com os alunos da educa\u00e7\u00e3o b\u00e1sica, al\u00e9m de obter cr\u00e9ditos para finaliza\u00e7\u00e3o do doutorado em educa\u00e7\u00e3o na FE-USP.","title":"Sobre"}]}